@page
@model SE1728_HE173252_A3.Pages.Post.PostReportModel
@using SE1728_HE173252_A3.Utils

@{
    ViewData["Title"] = "PostReport";
    var NotEditedString = "Not edited";
}

<h1>Post Report Statistics</h1>

<div class="mt-5">
    <form asp-page="./PostReport" method="get">
        <div class="row align-items-center">
            <div class="col-md-5">
                <label for="startDate">Start Date</label>
                <input id="startDate" asp-for="@Model.StartDate" class="form-control" style="height: calc(2.25rem + 2px);" />
            </div>
            <div class="col-md-5">
                <label for="endDate">End Date</label>
                <input id="endDate" asp-for="@Model.EndDate" class="form-control" style="height: calc(2.25rem + 2px);" />
            </div>
            <div class="col-md-2">
                <label for="btnSubmit"></label>
                <input id="btnSubmit" type="submit" value="View Report" class="form-control btn btn-outline-primary" style="height: calc(2.25rem + 2px);" />
            </div>
        </div>
    </form>
</div>

<table class="table table-hover mt-5" id="postsTable">
    <thead>
        <tr>
            <th>
                Post ID
            </th>
            <th>
                Title
            </th>
            <th>
                Author
            </th>
            <th>
                Category
            </th>
            <th>
                Created On
            </th>
            <th>
                Edited On
            </th>
        </tr>
    </thead>
    <tbody id="post_report_table">
        @if (Model.Post != null)
        {
            @foreach (var item in Model.Post)
            {
                <tr class="click-row" data-post-id="@item.PostID">
                    <td>
                        @Html.DisplayFor(modelItem => item.PostID)
                    </td>
                    <td style="max-width:400px">
                        @Html.DisplayFor(modelItem => item.Title)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Author.Email)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Category.CategoryName)
                    </td>
                    <td>
                        @CustomConverter.GetFormatedDateTime(item.CreatedDate)
                    </td>
                    <td>
                        @if (item.CreatedDate != item.UpdatedDate)
                        {
                            @CustomConverter.GetFormatedDateTime(item.UpdatedDate)
                            ;
                        }
                        else
                        {
                            @NotEditedString
                        }
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<!-- Bootstrap Modal -->
<div class="modal fade" id="postDetailsModal" tabindex="-1" role="dialog" aria-labelledby="orderDetailsModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-lg-custom" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="postDetailsModalLabel">Order Details</h5>
            </div>
            <div class="modal-body">
                <table class="table" id="postDetailsTable">
                    <!-- Post details will be populated here -->
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div id="startDateDisplay" data-message="@Model.StartDateDisplay"></div>
<div id="endDateDisplay" data-message="@Model.EndDateDisplay"></div>

<style>
    .modal-lg-custom {
        max-width: 60%;
    }

    .button-group {
        display: flex;
        justify-content: center;
        gap: 0.5rem;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var startDate = document.getElementById('startDateDisplay');
            var startDateVal = startDate.getAttribute('data-message');
            var startDateParsed = new Date(startDateVal);
            flatpickr("#startDate", {
                dateFormat: "d/m/Y",
                defaultDate: startDateParsed
            });

            var endDate = document.getElementById('endDateDisplay');
            var endDateVal = endDate.getAttribute('data-message');
            var endDateParsed = new Date(endDateVal);
            flatpickr("#endDate", {
                dateFormat: "d/m/Y",
                defaultDate: endDateParsed
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // Add click event listener to rows
            $('#postsTable tbody').on('click', 'tr.click-row', function () {
                var postId = $(this).data('post-id');
                $.ajax({
                    url: '@Url.Page("PageDetailsModal", "OnGetAsync")',
                    type: 'GET',
                    data: { id: postId },
                    success: function (data) {
                        $('#postDetailsTable').html(data);
                        $('#postDetailsModal').modal('show');
                    },
                    error: function () {
                        alert('Error fetching order details.');
                    }
                });
            });

            $('#postDetailsModal .btn-secondary').click(function () {
                $('#postDetailsModal').modal('hide');
            });
        });
    </script>
}